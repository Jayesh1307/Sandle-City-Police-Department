require("dotenv").config();
const { Client, GatewayIntentBits } = require("discord.js");
const noblox = require("noblox.js");

const client = new Client({
  intents: [GatewayIntentBits.Guilds, GatewayIntentBits.GuildMessages, GatewayIntentBits.MessageContent]
});

const GROUP_ID = process.env.GROUP_ID;
const ALLOWED_ROLE = process.env.16;

async function startApp() {
  await noblox.setCookie(process.env._|WARNING:-DO-NOT-SHARE-THIS.--Sharing-this-will-allow-someone-to-log-in-as-you-and-to-steal-your-ROBUX-and-items.|_CAEaAhAB.361FB1F8BF6207685CA928AF968AAC71B06FE272D3D1AA4AB0D32AC7CFAD42C58F2BAF9ABFFBD5C937AE01A1D183742839BDC30F950F44CBCBA9DFABAD7E768BBD52EC66F0F49424C381177929680BEA1615E818EC7B6A218D97FC686B32EA1190B3AA54494C42523700B1A063724E1018C605B54B02A26DF0757F5D58994A941F7DE14B44DB3009DF40DFB7CC60919081AED584F53E08124B160DB611EBF6595C91D8EE4ADAE0EE6CDB1EBC43B52F328EC9CD50489FCDCD3476453A95EE509995CA972495A0C832FB57C287C1FA3C0C65F2A99855335A85C90A445414925F51EFE98F4428E6FADEAB7F22F866E8057927C32C9B38E349AB1F42D9F9EFE9EAB636C0DE5345F17EF18B2B80CDF8A74309CFF6EC87992024BB15AF18096822161B58C61E4DC9579EA777DE2B26980DB9BCEA6224257860B2DB9078BE8F09DE74AD66183D4E02AB39ABCA0755197656DE043E2B1F47BE8A89FFA1D7B479A1714B56BDC6B25A58F0B641BDC3C224304AEA874CFE4D7BC9C992929F8FD73FB795487E63F659342F1F1BDE3FFA237962C87ACAFE76DBCA57BAC3C4738D126F8FD0910C6CC3C72A34B2ABFF88C39631BB793FC36124C5630745D569382DA3AED72495E7ABA7CB9540A4E50596CCD462FA078FADADF53B9E0F791F2CA28A14B6B5B1D7F8538EA598458327636F806E8C90529FFF55165821FC5C9DF72CE8DEE21823BD2DFD7160CC5F7AAC60954DBBEED71BEFF46672FC65483CCD79FBB0EE2D5CD5230D94834D0CE06211A5D760A4C5D3503F39B5F9533DC7A00D1D4155E88324CD67CD3A4A4082BFDF33E177F4363C75984AC084353693BD85D93CD32B6D35058F48DE38DFE0126B444EE25827BF44C9B0AD1EB5800BB48562106FFF9336AF47F669FFEF123A13D2236D8CB5EF4F9265F9928BE3A243CBD1B21A12CFF0F96E08CB14D43114B8ADD8538A4AC31746192F70DD0CE53256B388C14F4F0C17CDDF2444DF8C20B38909E885D1CFA1BA38863F4D222431B2D1863C0EF940C34279ED17BE6D8A903675E136171CBF773E631A1408758469BB5761FB2E1FAF3D83EDD5F3AFB000EF4A336002F65FF95CDED9E3EF8DDA7EE57EF53EA9AE9BA0B849727708D22E92512BF1C79024D95863AFA99F43155D2754C617F900B2925E8A5A51EA98DDD3C86577AE158E613B9EE965A94B698210BA3522DE6219B601D7F82C3AA2D643886B484FF117);
  console.log("✅ Logged into Roblox");
  client.login(process.env.MTExOTExMTg2MjY1NTY2NDI2OA.GMDUpM._Y8nJqOrBqG-vMIgU9gjkxyvk2m0B9TlGv5-x0);
}
startApp();

client.on("ready", () => {
  console.log(`✅ Logged in as ${client.user.tag}`);
});

client.on("messageCreate", async (msg) => {
  if (!msg.content.startsWith("!")) return;

  // check role
  if (!msg.member.roles.cache.some(r => r.name === ALLOWED_ROLE)) {
    return msg.reply("❌ You don't have permission to use ranking commands.");
  }

  const args = msg.content.slice(1).split(" ");
  const command = args.shift().toLowerCase();

  if (command === "promote") {
    let username = args[0];
    try {
      const userId = await noblox.getIdFromUsername(username);
      await noblox.promote(GROUP_ID, userId);
      msg.reply(`✅ Promoted ${username} in the group!`);
    } catch (err) {
      msg.reply("❌ Error promoting user: " + err);
    }
  }

  if (command === "demote") {
    let username = args[0];
    try {
      const userId = await noblox.getIdFromUsername(username);
      await noblox.demote(GROUP_ID, userId);
      msg.reply(`✅ Demoted ${username} in the group!`);
    } catch (err) {
      msg.reply("❌ Error demoting user: " + err);
    }
  }
});
